# Window Executables
#alias docker="docker.exe"
#alias docker-compose="docker-compose.exe"

# Shortcuts
alias ds="cd /c/Users/degno/source/iot"
alias di="cd /c/Users/degno/source/iotedge"
alias g="git"
alias h="history"
alias j="jobs"
alias github="cd ~/Source/github"

# Detect which `ls` flavor is in use
if ls --color > /dev/null 2>&1; then # GNU `ls`
	colorflag="--color"
else # OS X `ls`
	colorflag="-G"
fi

# List all files colorized in long format
alias l="ls -lF ${colorflag}"

# List all files colorized in long format, including dot files
alias la="ls -laF ${colorflag}"


# List only directories
alias lsd="ls -lF ${colorflag} | grep --color=never '^d'"

# Always use color output for `ls`
alias ls="command ls ${colorflag}"

# Some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Enable aliases to be sudoâ€™ed
alias sudo='sudo '


# IP addresses
alias ip="dig +short myip.opendns.com @resolver1.opendns.com"
alias ips="ifconfig -a | grep -o 'inet6\? \(addr:\)\?\s\?\(\(\([0-9]\+\.\)\{3\}[0-9]\+\)\|[a-fA-F0-9:]\+\)' | awk '{ sub(/inet6? (addr:)? ?/, \"\"); print }'"


# View HTTP traffic
alias sniff="sudo ngrep -d 'en0' -t '^(GET|POST) ' 'tcp and port 80'"
alias httpdump="sudo tcpdump -i en1 -n -s 0 -w - | grep -a -o -E \"Host\: .*|GET \/.*\""

# URL-encode strings
alias urlencode='python -c "import sys, urllib as ul; print ul.quote_plus(sys.argv[1]);"'

# Make Grunt print stack traces by default
command -v grunt > /dev/null && alias grunt="grunt --stack"

# Kill all the tabs in Chrome to free up memory
# [C] explained: http://www.commandlinefu.com/commands/view/402/exclude-grep-from-your-grepped-output-of-ps-alias-included-in-description
alias chromekill="ps ux | grep '[C]hrome Helper --type=renderer' | grep -v extension-process | tr -s ' ' | cut -d ' ' -f2 | xargs kill"

# Reload the shell (i.e. invoke as a login shell)
alias reload="exec $SHELL -l"


#DOCKER
alias dpst='watch -n 3 "docker ps"'
alias dps='docker ps -a'
alias dclean='docker rm -v $(docker ps -a -q -f status=exited)'
alias rmc='docker ps -q -a | xargs docker rm -f'
alias rmi='docker images -q | xargs docker rmi -f'
alias d='docker $@'
#alias docker='docker.exe'
#alias docker-machine='docker-machine.exe'
#alias docker-compose='docker-compose.exe'

alias registry-start='docker run -d -p 5000:5000 --name registry -v /c/users/degno/registry:/var/lib/registry --restart always registry:2'
alias registry-stop='docker rm -f registry'
alias registry-web='docker run -d -p 8000:80 --name registry-web --link registry -e ENV_DOCKER_REGISTRY_HOST=registry -e ENV_DOCKER_REGISTRY_PORT=5000 konradkleine/docker-registry-frontend:v2'

#MONGO
alias mongo-start="docker run -d -p 27017-27019:27017-27019 --name mongo mongo mongod --bind_ip 127.0.0.1" 
#alias mongo-start="docker run -d -p 27017-27019:27017-27019 --name mongo mongo mongod --rest --httpinterface --smallfiles"
alias mongo-admin="docker run -d --link mongo:mongo -p 8081:8081 mongo-express"
alias mongo-stop="docker rm -f mongo"
alias mongodb="docker logs -f mongo"
alias mongo-cli="docker exec -it mongo mongo"

#CASSANDRA
alias cassandra-start="docker run -d -p 9042:9042 --name cassandra cassandra:3.3"
alias cassandra-stop="docker rm -f cassandra"
alias cassandra-cli="docker run -it --link cassandra:cassandra --rm cassandra:3.3 sh -c 'exec cqlsh cassandra'"

#REDIS
alias redis-start="docker run -d -p 6379:6379 --name redis redis"
alias redis-stop="docker rm -f redis"
alias redis-cli="docker run -it --rm --link redis:redis redis bash -c 'redis-cli -h redis'"

#POSTGRES
alias psql-start="docker run -p 5432:5432 --name postgres -e POSTGRES_PASSWORD=password -d postgres"
alias psqlv8-start="docker run -p 5432:5432 --name postgres -e POSTGRES_PASSWORD=password -d postgres-plv8"
alias psql-stop="docker rm -f postgres"
alias psql-createdb="PGPASSWORD=password createdb -h docker -p 5432 -U postgres -w $@"
alias psql-cli="PGPASSWORD=password psql -h docker -p 5432 -U postgres -w $@"

#AZURE
#alias azure-serviceprincipaL="az ad user show --upn $(az account show --query user.name -otsv) --query objectId -otsv"

#IOT
alias iotedgedev="docker run -it --rm -v /var/run/docker.sock:/var/run/docker.sock -v /c/users/degno/source/iotedge:/home/iotedge microsoft/iotedgedev"
alias iotdevicestate="az iot hub device-identity show --device-id $D -g $RG -n $HUB --query connectionState -otsv"
alias ioteventmonitor="az iot hub monitor-events -d $D -n $HUB"

#TERRAFORM
alias tf="terraform"
alias tfa="terraform apply"
alias tfc="terraform console"
alias tfd="terraform destroy"
alias tff="terraform fmt"
alias tfg="terraform graph"
alias tfim="terraform import -backend-config 'storage_account_name=${TF_VAR_remote_state_account}' -backend-config 'container_name=${TF_VAR_remote_state_container}'"
alias tfi="terraform init -backend-config 'storage_account_name=${TF_VAR_remote_state_account}' -backend-config 'container_name=${TF_VAR_remote_state_container}'"
alias tfo="terraform output"
alias tfp="terraform plan"
alias tfpr="terraform providers"
alias tfr="terraform refresh"
alias tfsh="terraform show"
alias tft="terraform taint"
alias tfut="terraform untaint"
alias tfv="terraform validate"
alias tfw="terraform workspace new dascholl || terraform workspace select dascholl"
alias tfws="terraform workspace show"
alias tfs="terraform state"
alias tffu="terraform force-unlock"
alias tfwst="terraform workspace select"
alias tfwsw="terraform workspace show"
alias tfssw="terraform state show"
alias tfwde="terraform workspace delete"
alias tfwls="terraform workspace list"
alias tfsls="terraform state list"
alias tfwnw="terraform workspace new"
alias tfsmv="terraform state mv"
alias tfspl="terraform state pull"
alias tfsph="terraform state push"
alias tfsrm="terraform state rm"
alias tfay="terraform apply -auto-approve"
alias tfdy="terraform destroy -auto-approve"
alias tfinu="terraform init -upgrade"
alias tfpde="terraform plan --destroy"

